package br.jus.tjba.aclp.config;

import io.swagger.v3.oas.models.OpenAPI;
import io.swagger.v3.oas.models.info.Info;
import io.swagger.v3.oas.models.info.Contact;
import io.swagger.v3.oas.models.info.License;
import io.swagger.v3.oas.models.servers.Server;
import io.swagger.v3.oas.models.tags.Tag;
import io.swagger.v3.oas.models.Components;
import io.swagger.v3.oas.models.media.Schema;
import io.swagger.v3.oas.models.media.StringSchema;
import io.swagger.v3.oas.models.media.IntegerSchema;
import io.swagger.v3.oas.models.media.BooleanSchema;
import io.swagger.v3.oas.models.media.DateSchema;
import io.swagger.v3.oas.models.media.DateTimeSchema;
import io.swagger.v3.oas.models.media.ObjectSchema;
import io.swagger.v3.oas.models.media.ArraySchema;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import java.util.List;
import java.util.Map;

@Configuration
public class SwaggerConfig {

    @Bean
    public OpenAPI customOpenAPI() {
        OpenAPI components = new OpenAPI()
                .servers(List.of(
                        new Server().url("http://localhost:8080").description("Servidor Local"),
                        new Server().url("https://api-aclp.tjba.jus.br").description("Servidor de Homologa√ß√£o"),
                        new Server().url("https://api.tjba.jus.br").description("Servidor Produ√ß√£o")
                ))
                .info(new Info()
                        .title("ACLP - Sistema de Acompanhamento de Comparecimento em Liberdade Provis√≥ria")
                        .version("2.0.0")
                        .description("""
                                Sistema completo para gerenciamento de custodiados em liberdade provis√≥ria, 
                                incluindo controle de comparecimentos, hist√≥rico de endere√ßos e relat√≥rios.
                                
                                ## Funcionalidades Principais:
                                
                                ### üë• Gest√£o de Custodiados
                                - Cadastro completo com endere√ßo obrigat√≥rio
                                - Valida√ß√£o de documentos (CPF/RG)
                                - Controle de periodicidade de comparecimentos
                                - Suporte a m√∫ltiplos custodiados por processo
                                
                                ### üìç Controle de Endere√ßos
                                - Hist√≥rico completo de mudan√ßas de endere√ßo
                                - Valida√ß√£o de estados brasileiros
                                - Rastreabilidade temporal de resid√™ncias
                                
                                ### ‚úÖ Comparecimentos
                                - Registro presencial e online
                                - Controle autom√°tico de status (em conformidade/inadimplente)
                                - Hist√≥rico completo com observa√ß√µes
                                - Mudan√ßa de endere√ßo durante comparecimento
                                
                                ### üìä Relat√≥rios e Estat√≠sticas
                                - Estat√≠sticas de comparecimentos
                                - An√°lise de mobilidade por regi√£o
                                - Relat√≥rios por per√≠odo
                                - An√°lise de atrasos superiores a 30 dias
                                - Resumo completo do sistema
                                
                                ### üë®‚Äçüíº Usu√°rios e Seguran√ßa
                                - Controle de acesso por perfil (ADMIN/USUARIO)
                                - Verifica√ß√£o por email com c√≥digo de seguran√ßa
                                - Setup inicial do sistema
                                - Auditoria de opera√ß√µes
                                
                                ### üîß Funcionalidades Especiais
                                - Verifica√ß√£o autom√°tica de inadimplentes
                                - Migra√ß√£o de cadastros iniciais
                                - Sistema de notifica√ß√µes por email
                                """)
                        .contact(new Contact()
                                .name("TJBA - Tribunal de Justi√ßa da Bahia")
                                .email("suporte.ti@tjba.jus.br")
                                .url("https://www.tjba.jus.br"))
                        .license(new License()
                                .name("Uso Interno TJBA")
                                .url("https://www.tjba.jus.br/politica-privacidade")))
                .tags(List.of(
                        new Tag().name("Custodiados").description("Gest√£o de custodiados em liberdade provis√≥ria"),
                        new Tag().name("Comparecimentos").description("Registro e controle de comparecimentos"),
                        new Tag().name("Hist√≥rico de Endere√ßos").description("Gest√£o do hist√≥rico de endere√ßos dos custodiados"),
                        new Tag().name("Usu√°rios").description("Gest√£o de usu√°rios do sistema"),
                        new Tag().name("Verifica√ß√£o de Email").description("Sistema de verifica√ß√£o por email"),
                        new Tag().name("Setup").description("Configura√ß√£o inicial do sistema"),
                        new Tag().name("Status").description("Gerenciamento autom√°tico de status"),
                        new Tag().name("Relat√≥rios").description("Relat√≥rios e estat√≠sticas"),
                        new Tag().name("Sistema").description("Endpoints de teste e monitoramento")
                ))
                .components(new Components()
                        .schemas(Map.of(
                                // Schemas dos Enums
                                "TipoValidacao", new StringSchema()
                                        .description("Tipo de valida√ß√£o do comparecimento")
                                        ._enum(List.of("PRESENCIAL", "ONLINE", "CADASTRO_INICIAL"))
                                        .example("PRESENCIAL"),

                                "StatusComparecimento", new StringSchema()
                                        .description("Status do comparecimento do custodiado")
                                        ._enum(List.of("EM_CONFORMIDADE", "INADIMPLENTE"))
                                        .example("EM_CONFORMIDADE"),

                                "TipoUsuario", new StringSchema()
                                        .description("Tipo de usu√°rio do sistema")
                                        ._enum(List.of("ADMIN", "USUARIO"))
                                        .example("USUARIO"),

                                "EstadoBrasil", new StringSchema()
                                        .description("Sigla do estado brasileiro")
                                        ._enum(List.of("AC", "AL", "AP", "AM", "BA", "CE", "DF", "ES", "GO",
                                                "MA", "MT", "MS", "MG", "PA", "PB", "PR", "PE", "PI",
                                                "RJ", "RN", "RS", "RO", "RR", "SC", "SP", "SE", "TO"))
                                        .example("BA")

                                // Schema do CustodiadoDTO

                                // Schema do ComparecimentoDTO

                                // Schema do EnderecoDTO

                                // Schema do UsuarioDTO

                                // Schema de Estat√≠sticas

                                // Schema de Verifica√ß√£o de Email

                                // Schema do Setup
                        )));
        return components;
    }
}